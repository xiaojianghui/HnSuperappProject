plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdk rootProject.ext.android["minSdkVersion"]
        targetSdk rootProject.ext.android["targetSdkVersion"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofitgson"]
    api rootProject.ext.dependencies["adapterrxjava2"]
    api rootProject.ext.dependencies["mmkv"]
    api rootProject.ext.dependencies["utilcodex"]
    api rootProject.ext.dependencies["logInterceptor"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["arouterapi"]
    kapt rootProject.ext.dependencies["aroutercompiler"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glidecompiler"]
    api rootProject.ext.dependencies["transformations"]
}